from flask import Flask, request, jsonify
import requests
import os

app = Flask(__name__)

# üîπ ‡πÉ‡∏ä‡πâ Environment Variables
LINE_ACCESS_TOKEN = os.getenv("LINE_ACCESS_TOKEN")
GAS_URL = os.getenv("GAS_URL")  # ‡πÉ‡∏ä‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° Google Sheets ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•

# üîπ Dictionary ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
USER_SESSIONS = {}

# üîπ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏û‡∏•‡∏≤‡∏™‡∏ï‡∏¥‡∏Å (‡∏´‡∏ô‡πà‡∏ß‡∏¢: ‡∏ö‡∏≤‡∏ó/kg)
MATERIAL_COSTS = {
    "ABS": 200,
    "PC": 250,
    "Nylon": 350,
    "PP": 70,
    "PE": 60,
    "PVC": 90,
    "PET": 100,
    "PMMA": 150,
    "POM": 350,
    "PU": 400
}

@app.route("/", methods=["GET"])
def home():
    """ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ó‡∏≥‡∏á‡∏≤‡∏ô """
    return "LINE Webhook is running", 200

@app.route("/webhook", methods=["POST"])
def webhook():
    """ ‡∏£‡∏±‡∏ö Webhook Event ‡∏à‡∏≤‡∏Å LINE """
    if request.method == "POST":
        data = request.json
        print("üì© Received:", data)

        for event in data.get("events", []):
            user_id = event["source"]["userId"]
            if "message" in event:
                message_text = event["message"]["text"].strip()
                print(f"üì© ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å {user_id}: {message_text}")

                if message_text.lower() == "‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì":
                    start_questionnaire(user_id)
                else:
                    process_response(user_id, message_text)

        return jsonify({"status": "ok"}), 200
    else:
        return jsonify({"error": "Method Not Allowed"}), 405

def start_questionnaire(user_id):
    """ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ñ‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• """
    USER_SESSIONS[user_id] = {"step": 1}
    send_message(user_id, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï:\nABS, PC, Nylon, PP, PE, PVC, PET, PMMA, POM, PU")

def process_response(user_id, message_text):
    """ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ """
    if user_id not in USER_SESSIONS:
        send_message(user_id, "‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÇ‡∏î‡∏¢‡∏û‡∏¥‡∏°‡∏û‡πå '‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì'")
        return

    step = USER_SESSIONS[user_id]["step"]

    if step == 1:
        if message_text not in MATERIAL_COSTS:
            send_message(user_id, "‚ùå ‡∏ß‡∏±‡∏™‡∏î‡∏∏‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≤‡∏Å:\nABS, PC, Nylon, PP, PE, PVC, PET, PMMA, POM, PU")
            return
        USER_SESSIONS[user_id]["material"] = message_text
        USER_SESSIONS[user_id]["step"] = 2
        send_message(user_id, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î‡∏ä‡∏¥‡πâ‡∏ô‡∏á‡∏≤‡∏ô (‡∏Å‡∏ß‡πâ‡∏≤‡∏áx‡∏¢‡∏≤‡∏ßx‡∏™‡∏π‡∏á) cm ‡πÄ‡∏ä‡πà‡∏ô 10x15x5")

    elif step == 2:
        USER_SESSIONS[user_id]["size"] = message_text
        USER_SESSIONS[user_id]["step"] = 3
        send_message(user_id, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏¥‡∏ï (‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç)")

    elif step == 3:
        try:
            USER_SESSIONS[user_id]["quantity"] = int(message_text)
            USER_SESSIONS[user_id]["step"] = 4
            send_message(user_id, "‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô! ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô...")
            calculate_cost(user_id)
        except ValueError:
            send_message(user_id, "‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÄ‡∏ä‡πà‡∏ô 100")

def calculate_cost(user_id):
    """ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Google Sheets """
    material = USER_SESSIONS[user_id]["material"]
    size = USER_SESSIONS[user_id]["size"]
    quantity = USER_SESSIONS[user_id]["quantity"]

    # üîπ ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡∏ô‡∏≤‡∏î‡∏ä‡∏¥‡πâ‡∏ô‡∏á‡∏≤‡∏ô‡πÄ‡∏õ‡πá‡∏ô cm¬≥
    try:
        dimensions = list(map(int, size.split("x")))
        volume = dimensions[0] * dimensions[1] * dimensions[2]  # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ï‡∏£
    except:
        send_message(user_id, "‚ùå ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ä‡∏¥‡πâ‡∏ô‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÇ‡∏õ‡∏£‡∏î‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö ‡πÄ‡∏ä‡πà‡∏ô 10x15x5")
        return

    # üîπ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô
    material_cost_per_kg = MATERIAL_COSTS.get(material, 150)  # ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏™‡∏î‡∏∏
    density = 1.05  # ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ô‡∏≤‡πÅ‡∏ô‡πà‡∏ô‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì (g/cm¬≥)
    weight_kg = (volume * density) / 1000  # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏à‡∏≤‡∏Å‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ï‡∏£ (kg)
    total_cost = weight_kg * quantity * material_cost_per_kg

    # üîπ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Google Sheets ‡∏ú‡πà‡∏≤‡∏ô GAS
    if GAS_URL:
        data = {
            "user_id": user_id,
            "material": material,
            "size": size,
            "quantity": quantity,
            "volume_cm3": volume,
            "weight_kg": weight_kg,
            "total_cost": total_cost
        }
        requests.post(GAS_URL, json=data)

    # üîπ ‡∏™‡πà‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    result_text = f"""‚úÖ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:
üìå ‡∏ß‡∏±‡∏™‡∏î‡∏∏: {material}
üìå ‡∏Ç‡∏ô‡∏≤‡∏î: {size} cm¬≥
üìå ‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ï‡∏£: {volume} cm¬≥
üìå ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì: {weight_kg:.2f} kg
üìå ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: {quantity} ‡∏ä‡∏¥‡πâ‡∏ô
üìå ‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô‡∏£‡∏ß‡∏°: {total_cost:,.2f} ‡∏ö‡∏≤‡∏ó
"""
    send_message(user_id, result_text)
    del USER_SESSIONS[user_id]

def send_message(user_id, text):
    """ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà LINE User """
    headers = {
        "Authorization": f"Bearer {LINE_ACCESS_TOKEN}",
        "Content-Type": "application/json"
    }
    message = {
        "to": user_id,
        "messages": [{"type": "text", "text": text}]
    }
    response = requests.post("https://api.line.me/v2/bot/message/push", headers=headers, json=message)

    print(f"üì§ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏ó‡∏µ‡πà {user_id}: {text}")
    print(f"üì° LINE Response: {response.status_code} {response.text}")

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.getenv("PORT", 8080)))
